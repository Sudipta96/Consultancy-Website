# Generated by Django 4.0 on 2023-03-06 06:27

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0014_rename_address_line_1_address_address_line'),
    ]

    operations = [
        migrations.CreateModel(
            name='GraduationExamName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Degree Name Like: B.B.A, B.Sc. etc', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Graduation Exam Name',
                'verbose_name_plural': 'Graduation Exam Name',
            },
        ),
        migrations.CreateModel(
            name='GroupName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Science, Commerce, Humanities etc', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='HSCEquivalentExamName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Degree Name Like: H.S.c, A Level, Alim etc', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'HSC\\Equivalent Exam',
                'verbose_name_plural': 'HSC\\Equivalent Exam',
            },
        ),
        migrations.CreateModel(
            name='PostGraduationExamName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Degree Name Like: B.B.A, B.Sc. etc', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SSCEquivalentExamName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Degree Name Like: S.S.C, Dakhil. O Level etc', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'SSC\\Equivalent Exam',
                'verbose_name_plural': 'SSC\\Equivalent Exam',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Subject Name: Computer Eng. or Accounting etc', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='University or Institution Name', max_length=30)),
                ('short_name', models.CharField(blank=True, help_text='University or Institution Short Name', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentCurrentEducationInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university_level', models.CharField(max_length=20)),
                ('exam_name', models.CharField(help_text='examination type', max_length=30)),
                ('which_year_student', models.CharField(blank=True, max_length=20)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_current_edu_info', to='accounts.account')),
                ('subject', models.ForeignKey(help_text='subject name', on_delete=django.db.models.deletion.PROTECT, to='account_profile.subject')),
                ('university', models.ForeignKey(help_text='university_name', on_delete=django.db.models.deletion.PROTECT, related_name='student_current_university', to='account_profile.university')),
            ],
        ),
        migrations.CreateModel(
            name='SSCInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(help_text='institution name', max_length=255)),
                ('gpa', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_ssc_info', to='accounts.account')),
                ('exam', models.ForeignKey(help_text='examination type', on_delete=django.db.models.deletion.PROTECT, to='account_profile.sscequivalentexamname')),
                ('group', models.ForeignKey(help_text='GROUP Name', on_delete=django.db.models.deletion.PROTECT, to='account_profile.groupname')),
            ],
        ),
        migrations.CreateModel(
            name='PostGraduationInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('which_year_student', models.CharField(max_length=20, verbose_name=(('first_year', '1st Year'), ('second_year', '2nd Year'), ('just_passed', 'Just Passed')))),
                ('cgpa', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(4.0)])),
                ('division', models.CharField(blank=True, choices=[('1st division', '1st division'), ('2nd division', '2nd division'), ('3rd division', '3rd division')], max_length=25)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_post_grad_info', to='accounts.account')),
                ('exam', models.ForeignKey(help_text='examination type', on_delete=django.db.models.deletion.PROTECT, to='account_profile.postgraduationexamname')),
                ('subject', models.ForeignKey(help_text='subject name', on_delete=django.db.models.deletion.PROTECT, to='account_profile.subject')),
                ('university', models.ForeignKey(help_text='university_name', on_delete=django.db.models.deletion.PROTECT, related_name='university_post_graduate', to='account_profile.university')),
            ],
        ),
        migrations.CreateModel(
            name='HSCInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(help_text='institution name', max_length=255)),
                ('gpa', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_hsc_info', to='accounts.account')),
                ('exam', models.ForeignKey(help_text='examination type', on_delete=django.db.models.deletion.PROTECT, to='account_profile.hscequivalentexamname')),
                ('group', models.ForeignKey(help_text='GROUP Name', on_delete=django.db.models.deletion.PROTECT, to='account_profile.groupname')),
            ],
        ),
        migrations.CreateModel(
            name='GraduationInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('which_year_student', models.CharField(choices=[('first_year', '1st Year'), ('second_year', '2nd Year'), ('third_year', '3rd Year'), ('fourth_year', '4th Year'), ('just_passed', 'Just Passed')], max_length=20)),
                ('result_type', models.CharField(blank=True, choices=[('Grade', 'Grade'), ('Division', 'Division')], max_length=25)),
                ('cgpa', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(4.0)])),
                ('division', models.CharField(blank=True, choices=[('1st division', '1st division'), ('2nd division', '2nd division'), ('3rd division', '3rd division')], max_length=25)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_grad_info', to='accounts.account')),
                ('exam', models.ForeignKey(help_text='examination type', on_delete=django.db.models.deletion.PROTECT, to='account_profile.graduationexamname')),
                ('subject', models.ForeignKey(help_text='subject name', on_delete=django.db.models.deletion.PROTECT, to='account_profile.subject')),
                ('university', models.ForeignKey(help_text='university_name', on_delete=django.db.models.deletion.PROTECT, related_name='university_graduate', to='account_profile.university')),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_id', models.CharField(max_length=10, unique=True)),
                ('certificate', models.FileField(blank=True, help_text='certificate file', upload_to='')),
                ('description', models.TextField(blank=True, max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(help_text='The person who create the certificate', null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.account')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_certificate', to='accounts.account')),
            ],
        ),
    ]
