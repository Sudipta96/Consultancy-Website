# Generated by Django 4.0 on 2023-03-08 06:12

import ckeditor_uploader.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import imagekit.models.fields
import student_forum.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Company name where student gets internship or placement', max_length=250)),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='SuccessStory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_bio', models.TextField(help_text='This bio will be displayed in sucess story page.', max_length=255)),
                ('image_thumbnail', imagekit.models.fields.ProcessedImageField(default='default/default_card.jpg', help_text='This image will be displayed in list view card', upload_to=student_forum.models.SuccessStory.get_success_story_card_image_file_path, validators=[django.core.validators.FileExtensionValidator(['jpg', 'png']), student_forum.models.validate_success_story_card_image_file_size])),
                ('card_intro', models.TextField(help_text='This introduction will be displayed in list card', max_length=255)),
                ('story_tagline', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=80, unique=True)),
                ('story', ckeditor_uploader.fields.RichTextUploadingField(help_text='The success story', max_length=3000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(help_text='The company name where the student got internship or placement', null=True, on_delete=django.db.models.deletion.SET_NULL, to='student_forum.company')),
                ('edited_by', models.ForeignKey(help_text='The person who create or edit the story', null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.account')),
                ('student', models.ForeignKey(help_text='The person who belongs to the story', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='success_story_holder', to='accounts.account')),
            ],
            options={
                'verbose_name': 'Success Story',
                'verbose_name_plural': 'Success Stories',
            },
        ),
        migrations.CreateModel(
            name='StudentFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField(help_text='Write your review', max_length=400)),
                ('rating', models.CharField(choices=[('1', 'ONE STAR'), ('2', 'TWO STAR'), ('3', 'THREE STAR'), ('4', 'FOUR STAR'), ('5', 'FIVE STAR')], default='3', max_length=10)),
                ('will_be_displayed', models.BooleanField(default=False, help_text='If this field is checked, Review will be displayed in website.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('feedback_given_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_given_by', to='accounts.account')),
            ],
            options={
                'verbose_name': 'Student Feedback',
                'verbose_name_plural': 'Student Feedbacks',
            },
        ),
        migrations.CreateModel(
            name='StudentAdmissionTransactionInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('transaction_id', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(help_text='The person who has added this transaction info', null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.account')),
                ('student', models.ForeignKey(help_text='Student belongs to this transaction', on_delete=django.db.models.deletion.CASCADE, related_name='student_admission_transaction', to='accounts.account')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyInternship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_description', models.TextField(blank=True, help_text='Any details you want to add...', max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='company_internship', to='student_forum.company')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_internship', to='accounts.account')),
            ],
            options={
                'verbose_name': 'Company Internship',
                'verbose_name_plural': 'Company Internship',
            },
        ),
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('father_name', models.CharField(max_length=100)),
                ('mother_name', models.CharField(max_length=100)),
                ('personal_contact_number', models.CharField(blank=True, help_text='Supported Formats: +8801757551134, 8801757871165 or 01715604232', max_length=14, validators=[django.core.validators.RegexValidator('^(?:\\+?88)?01[3-9]\\d{8}$', message='Contact number must be entered in following formats: +8801757551134, 8801857871165 or 01915604232')])),
                ('gurdian_contact_number', models.CharField(blank=True, help_text='Supported Formats: +8801757551134, 8801757871165 or 01715604232', max_length=14, validators=[django.core.validators.RegexValidator('^(?:\\+?88)?01[3-9]\\d{8}$', message='Contact number must be entered in following formats: +8801757551134, 8801857871165 or 01915604232')])),
                ('avatar', imagekit.models.fields.ProcessedImageField(default='default/default_avatar.jpg', upload_to=student_forum.models.Admission.get_student_admission_avatar_file_path, validators=[django.core.validators.FileExtensionValidator(['jpg', 'png']), student_forum.models.validate_account_avatar_file_size])),
                ('transaction_id', models.CharField(max_length=10, unique=True)),
                ('national_id', models.IntegerField(blank=True)),
                ('birth_cirtificate_id', models.IntegerField(blank=True)),
                ('is_verified', models.BooleanField(default=False, help_text='admission is verified or not')),
                ('is_checked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(help_text='Student belongs to this admission', on_delete=django.db.models.deletion.CASCADE, related_name='student_admission', to='accounts.account')),
            ],
        ),
        migrations.AddConstraint(
            model_name='companyinternship',
            constraint=models.UniqueConstraint(fields=('company', 'student'), name='unique_company_internship'),
        ),
    ]
