# Generated by Django 4.0 on 2023-03-08 06:11

import ckeditor.fields
import ckeditor_uploader.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import imagekit.models.fields
import skills.models
import skills.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Category name for course', max_length=150)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('hero_section', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='category_hero_section', to='core.herosection')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required: course name', max_length=255, unique=True)),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='course safe URL')),
                ('total_duration', models.CharField(help_text='Required: course duration in hours/minutes or in weeks/months format', max_length=50)),
                ('number_of_lectures', models.IntegerField(blank=True, help_text='Required: Total number of lessions', null=True)),
                ('image_thumbnail', imagekit.models.fields.ProcessedImageField(default='default/default_card.jpg', help_text='This image will be displayed in list view card', upload_to=skills.models.Course.get_image_thumbnail_file_path, validators=[django.core.validators.FileExtensionValidator(['jpg', 'png']), skills.models.validate_image_thumbnail_file_size])),
                ('title_intro', ckeditor.fields.RichTextField(help_text='Required: title introduction - maximum  3 to 4 lines', max_length=300)),
                ('what_you_will_learn', ckeditor_uploader.fields.RichTextUploadingField(help_text='Required: what you will learn content - maximum 1000 characters', max_length=1000)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(help_text='Required: Long Description - maximum 3000 characters', max_length=3000)),
                ('preview_video_file', models.FileField(blank=True, help_text='Course preview video. Supported file format: mp4. Maximum file limit:20mb', null=True, upload_to='', validators=[django.core.validators.FileExtensionValidator(['mp4']), skills.validators.validate_file_size])),
                ('preview_video_url', models.URLField(blank=True, help_text='preview video url like youtube video url.')),
                ('is_active', models.BooleanField(default=True, help_text='format: true=course visible', verbose_name='course visibility')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='course_category', to='skills.category')),
                ('edited_by', models.ForeignKey(help_text='User who create or edit the course', null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.account')),
            ],
        ),
        migrations.CreateModel(
            name='LearningItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.CharField(max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_item', to='skills.course')),
            ],
            options={
                'verbose_name': 'What You Wil Learn',
                'verbose_name_plural': 'What You Wil Learn',
            },
        ),
        migrations.CreateModel(
            name='FreeResources',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, help_text='Resource url text', max_length=200)),
                ('resource_url', models.URLField(blank=True, help_text='Resource url or link. If you add url dont upload file.')),
                ('resource_file', models.FileField(blank=True, help_text="Resource file.If you upload file,don't add resource_file url. Supported file format: pdf. Maximum file limit:20mb", null=True, upload_to=skills.models.FreeResources.get_resource_file_path, validators=[django.core.validators.FileExtensionValidator(['pdf']), skills.validators.validate_file_size])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(help_text='Required: Choose the course name.                                                   N.B: If you delete the course, related course resources will be automatically deleted', on_delete=django.db.models.deletion.CASCADE, related_name='course_resource', to='skills.course')),
            ],
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_name', models.CharField(help_text='Required:Chapter name', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(help_text='Required: Choose the course name.                                                   N.B: If you delete the course, related course chapters will be automatically deleted', on_delete=django.db.models.deletion.CASCADE, related_name='course_chapter', to='skills.course')),
            ],
        ),
    ]
